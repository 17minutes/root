

// This can be used in C mode. It cannot go in ROOT_Type because ThreadLocalStorage.h
// uses kFALSE and kTRUE, which come from Rtypes.h causing a cycle.
module ThreadLocalStorage {
  header "ThreadLocalStorage.h"
  export *
}
// These can be used in C mode.
module ROOT_Types {
  header "RtypesCore.h"
  textual header "RConfig.h"
  textual header "RVersion.h"
  textual header "TException.h" // This should go in RConfig.h as it defines macros.
  export *
}

// This module is special, it contains headers which don't require rtti support
// to build (eg. don't use dynamic_cast or typeid). They are also needed when
// compiling rootcling with -fno-rtti. We have to keep them outside module ROOT
// to avoid -fno-rtti invocation to trigger building of entire module ROOT
// some of whose headers require -frtti.
module ROOT_Core_Config_C {
 //requires cplusplus
 
 // needs C++ and in some cases we build with C (ZTrees.h, through ZDeflate.c)
 textual header "RConversionRuleParser.h"
 exclude header "RtypesImp.h"
 header "Rtypes.h"
 header "TClassEdit.h"
 header "TMetaUtils.h"
 header "TSchemaType.h"
 header "DllImport.h" // Should merge in RConfig.h.
 header "Rtypeinfo.h" // Old and useless, should delete.
 header "TGenericClassInfo.h"
 header "TSchemaHelper.h"
 header "ESTLType.h"
 header "RStringView.h"
 header "Varargs.h" // Old should revisit, either drop or delete.
 header "RootMetaSelection.h"
 header "TString.h"
 header "Riosfwd.h"
 header "snprintf.h" // #included by Rtypes, could go away?
 header "strlcpy.h" // #included by Rtypes, could go away?

 header "TMathBase.h"
 // Should we marked textual because of inclusion libcpp_string_view.h,
 // using macros to set up the header file.
 textual header "RWrap_libcpp_string_view.h"

 export *
}
